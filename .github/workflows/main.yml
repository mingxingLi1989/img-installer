name: "Build Custom OpenWrt Installer ISO"

on:
  workflow_dispatch:
    inputs:
      download_url:
        description: '请输入下载地址(扩展名 .img.gz/.img.xz/.img.zip)'
        required: true
        default: 'https://default.example.com/file.img.gz'

jobs:
  build-release:
    name: "Build and Release"
    runs-on: "ubuntu-22.04"
    
    # 设置环境变量
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: "Checking out git repository"
        uses: actions/checkout@v2

      - name: "Install build dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            debootstrap \
            xorriso \
            isolinux \
            syslinux-efi \
            grub-efi-amd64 \
            grub-pc-bin \
            mtools \
            dosfstools \
            parted \
            squashfs-tools \
            wget \
            curl \
            git \
            p7zip-full

      - name: "Set executable permissions"
        run: |
          chmod +x "${{ github.workspace }}/custom.sh"
          if [ -f "${{ github.workspace }}/supportFiles/custom/build.sh" ]; then
            chmod +x "${{ github.workspace }}/supportFiles/custom/build.sh"
          fi

      - name: "Create output directory"
        run: mkdir -p output

      - name: "Validate Download URL"
        id: validate_url
        run: |
          DEFAULT_URL="https://default.example.com/file.img.gz"
          USER_INPUT_URL="${{ github.event.inputs.download_url }}"
          
          if [[ "$USER_INPUT_URL" == "$DEFAULT_URL" ]]; then
            echo "❌ 错误：请修改默认下载地址！当前地址为无效占位符。"
            exit 1
          fi
          
          if [[ ! "$USER_INPUT_URL" =~ ^https?://.+\.[gG][zZ]$|^https?://.+\.[xX][zZ]$|^https?://.+\.[zZ][iI][pP]$ ]]; then
            echo "❌ 错误：地址需以 http(s) 开头且扩展名为 .gz/.xz/.zip"
            echo "当前输入：$USER_INPUT_URL"
            exit 1
          fi

      - name: "Build Image"
        run: |
          set -e  # 遇到错误立即退出
          download_url="${{ github.event.inputs.download_url }}"
          echo "使用下载地址: $download_url"
          ./custom.sh "$download_url"
          
          # 检查是否生成了ISO文件
          if [ ! -f "output/custom-installer-x86_64.iso" ]; then
            echo "❌ 错误：ISO文件未生成"
            echo "当前目录内容:"
            ls -la
            echo "output目录内容:"
            ls -la output/ || true
            exit 1
          fi
          echo "✅ ISO文件已生成"

      - name: "List build artifacts"
        if: always()
        run: |
          echo "构建产物:"
          find . -type f \( -name "*.iso" -o -name "*.log" \) -ls || true

      - name: "Publish to Release"
        if: success()
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: "Custom-Installer-x86_64-ISO"
          body_path: "${{ github.workspace }}/supportFiles/custom/info.md"
          files: |
            output/custom-installer-x86_64.iso
          token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
