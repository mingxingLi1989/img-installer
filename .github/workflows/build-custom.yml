name: Convert GZ to ISO

on:
  workflow_dispatch:
    inputs:
      gz_url:
        description:  '请输入下载地址(扩展名 .img.gz/.img.xz/.img.zip)'
        required: true
        default: 'https://example.com/path/to/image.img.gz'

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xorriso \
            isolinux \
            syslinux-efi \
            grub-efi-amd64 \
            grub-pc-bin \
            mtools \
            dosfstools \
            wget

      - name: Create working directories
        run: |
          mkdir -p output
          mkdir -p workdir/iso/boot/grub

      - name: Download and extract GZ file
        run: |
          # 获取文件名
          filename=$(basename "${{ github.event.inputs.gz_url }}")
          # 下载文件
          wget -O "workdir/$filename" "${{ github.event.inputs.gz_url }}"
          # 解压文件
          gunzip -c "workdir/$filename" > workdir/original.img

      - name: Create ISO structure
        run: |
          # 创建ISO目录结构
          mkdir -p workdir/iso/boot/grub
          
          # 复制GRUB配置文件
          cat > workdir/iso/boot/grub/grub.cfg << 'EOF'
          set timeout=5
          set default=0
          
          menuentry "Boot OpenWrt" {
              set root=(hd0,msdos1)
              linux /boot/vmlinuz root=/dev/sda1
              initrd /boot/initrd.img
              boot
          }
          EOF

          # 创建ISO文件
          xorriso -as mkisofs \
            -R -r -J -joliet-long \
            -V "OpenWrt_Installer" \
            -o output/openwrt-installer.iso \
            -b isolinux/isolinux.bin \
            -c isolinux/boot.cat \
            -no-emul-boot \
            -boot-load-size 4 \
            -boot-info-table \
            -eltorito-alt-boot \
            -e boot/grub/efi.img \
            -no-emul-boot \
            workdir/iso

      - name: Upload ISO as artifact
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-installer
          path: output/openwrt-installer.iso
          retention-days: 1

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: output/openwrt-installer.iso
          tag_name: openwrt-installer
          name: OpenWrt Installer ISO
          body: "Auto-generated OpenWrt Installer ISO"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
